import slack
from flask import Flask
from slackeventsapi import SlackEventAdapter

SLACK_TOKEN = "xoxb-4910565592977-4897960544930-2ED0vjKpu4dTYM4NJIC7ZIfi"
SIGNING_SECRET = "270d77787f2b4004e7124e9b1521a389"


app = Flask(__name__)
slack_event_adapter = SlackEventAdapter(SIGNING_SECRET, '/slack/events', app)
client = slack.WebClient(token=SLACK_TOKEN)

class task:
    def __init__(self, name, diff):
        self.name = name
        self.diff = diff

class people:
    def __init__(self, name, skill):
        self.name = name
        self.skill = skill

task_list = []
people_list = []
x = []

@ slack_event_adapter.on('message')
def message(payload):
    print(payload)
    event = payload.get('event', {})
    channel_id = event.get('channel')
    user_id = event.get('user')
    text = event.get('text')

    x = text.split(' ')

    if text  == "!help":
        client.chat_postMessage(channel=channel_id, text="!task <name> <difficulty (1-3) -> add task\n!people <name> <availbilty> (1-3)-> add people\n!print -> print list\n!done <index>")
        
    if x[0] == "!task":
        output = " "
        output = "Task " + str(x[1]) + " added to index " + str(len(task_list))
        client.chat_postMessage(channel=channel_id, text= output)
        t = task(x[1], x[len(x) - 1])
        task_list.append(t)

    if x[0] == "!people": 
        output = " " 
        output = str(x[1]) + " added to availble people list at index " + str(len(people_list)) 
        client.chat_postMessage(channel=channel_id, text= output)  
        s = people(x[1], x[len(x) - 1])   
        people_list.append(s)
        
    if x[0] == "!print":
        for x in range(len(task_list)):
            output = " "
            output += str(x) +" " + str(task_list[x].name) + ", "

        client.chat_postMessage(channel=channel_id, text= "Tasks: " + output)

        for x in range(len(people_list)):
            output = " "
            output += str(x) +" " + str(people_list[x].name) + ", "

        client.chat_postMessage(channel=channel_id, text= "People: " + output)

    if  x[0] == "!done":
        task_list.remove(int(x[1]))
        
    #task_list.sort(key=lambda a: a.diff, reverse=True)
    #people_list.sort(key=lambda a: a.diff, reverse=True)



if __name__ == "__main__":
    app.run(debug=True)
